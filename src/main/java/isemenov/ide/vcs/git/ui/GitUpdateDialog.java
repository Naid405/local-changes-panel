package isemenov.ide.vcs.git.ui;

import isemenov.ide.ui.component.LoadingDialog;
import isemenov.ide.vcs.git.GitService;

import javax.swing.*;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class GitUpdateDialog extends JDialog {
    private final GitService service;
    private final ButtonGroup updateTypeGroup;
    private final ButtonGroup cleanTreeGroup;
    private JPanel contentPane;
    private JButton buttonOK;
    private JButton buttonCancel;
    private JRadioButton mergeRadioButton;
    private JRadioButton rebaseRadioButton;
    private JRadioButton autoStashRadioButton;
    private JRadioButton noRadioButton;
    private JPanel mainPanel;

    public GitUpdateDialog(GitService service) {
        this.service = service;
        setTitle("Update project");
        setModal(true);
        setContentPane(contentPane);
        getRootPane().setDefaultButton(buttonOK);

        updateTypeGroup = new ButtonGroup();
        updateTypeGroup.add(mergeRadioButton);
        updateTypeGroup.add(rebaseRadioButton);

        cleanTreeGroup = new ButtonGroup();
        cleanTreeGroup.add(autoStashRadioButton);
        cleanTreeGroup.add(noRadioButton);

        buttonOK.addActionListener(e -> onOK());
        buttonCancel.addActionListener(e -> onCancel());

        // call onCancel() when cross is clicked
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                onCancel();
            }
        });

        // call onCancel() on ESCAPE
        contentPane.registerKeyboardAction(e -> onCancel(), KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),
                                           JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        pack();
        setResizable(false);
    }

    private void onOK() {
        GitService.UpdateType updateType = GitService.UpdateType
                .valueOf(updateTypeGroup.getSelection().getActionCommand());
        GitService.CleanTreeType cleanTreeType = GitService.CleanTreeType
                .valueOf(cleanTreeGroup.getSelection().getActionCommand());

        LoadingDialog loadingDialog = new LoadingDialog("Updating project",
                                                        () -> {
                                                            if (service.updateProject(updateType, cleanTreeType))
                                                                return "Project updated";
                                                            else
                                                                return "Already up to date";
                                                        });
        loadingDialog.execute();
        dispose();
    }

    private void onCancel() {
        dispose();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new BorderLayout(0, 0));
        mainPanel = new JPanel();
        mainPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        contentPane.add(mainPanel, BorderLayout.NORTH);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        mainPanel.add(panel1);
        mergeRadioButton = new JRadioButton();
        mergeRadioButton.setActionCommand("MERGE");
        mergeRadioButton.setSelected(true);
        mergeRadioButton.setText("Merge");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(mergeRadioButton, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Update type");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(label1, gbc);
        rebaseRadioButton = new JRadioButton();
        rebaseRadioButton.setActionCommand("REBASE");
        rebaseRadioButton.setSelected(false);
        rebaseRadioButton.setText("Rebase");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(rebaseRadioButton, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        mainPanel.add(panel2);
        noRadioButton = new JRadioButton();
        noRadioButton.setActionCommand("NO");
        noRadioButton.setSelected(true);
        noRadioButton.setText("No");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(noRadioButton, gbc);
        autoStashRadioButton = new JRadioButton();
        autoStashRadioButton.setActionCommand("STASH");
        autoStashRadioButton.setText("Auto-stash (rebase only)");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(autoStashRadioButton, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Clean work tree?");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        panel2.add(label2, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        contentPane.add(panel3, BorderLayout.CENTER);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel3.add(panel4, BorderLayout.CENTER);
        buttonOK = new JButton();
        buttonOK.setText("Update");
        panel4.add(buttonOK);
        buttonCancel = new JButton();
        buttonCancel.setText("Cancel");
        panel4.add(buttonCancel);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
